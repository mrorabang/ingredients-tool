{"ast":null,"code":"import _objectSpread from\"D:/Ingredients Tool/tool/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import dataService from'../services/dataService';import Spinner from'./Spinner';import MultiSelectGrid from'./MultiSelectGrid';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const InventoryPage=()=>{// State để lưu dữ liệu\nconst[menuItems,setMenuItems]=useState([]);const[ingredients,setIngredients]=useState([]);const[recipes,setRecipes]=useState({});const[salesCount,setSalesCount]=useState({});const[currentDate,setCurrentDate]=useState(new Date().toISOString().split('T')[0]);const[isDataLoading,setIsDataLoading]=useState(true);const[searchTerm,setSearchTerm]=useState('');const[selectedItems,setSelectedItems]=useState({});// Load dữ liệu khi component mount\nuseEffect(()=>{const loadData=async()=>{setIsDataLoading(true);try{if(!dataService.isInitialized){await dataService.init();}setMenuItems(dataService.getMenuItems());setIngredients(dataService.getIngredients());setRecipes(dataService.getAllRecipes());}catch(error){console.error('Error loading data in InventoryPage:',error);}finally{setIsDataLoading(false);}};loadData();},[]);// Load dữ liệu bán hàng khi component mount\nuseEffect(()=>{const todaySales=dataService.getSalesByDate(currentDate);setSalesCount(todaySales);},[currentDate]);// Sync selectedItems với salesCount\nuseEffect(()=>{const newSelectedItems={};Object.keys(salesCount).forEach(itemId=>{if(salesCount[itemId]>0){const item=menuItems.find(item=>item.id==itemId);if(item){newSelectedItems[itemId]={amount:salesCount[itemId].toString(),unit:'ly'};}}});setSelectedItems(newSelectedItems);},[salesCount,menuItems]);// Hàm cập nhật số lượng bán\nconst updateSalesCount=(itemId,count)=>{const newCount=Math.max(0,count);// Đảm bảo không âm\nsetSalesCount(prev=>{const updated=_objectSpread(_objectSpread({},prev),{},{[itemId]:newCount});// Lưu vào localStorage\ndataService.updateSales(currentDate,updated);return updated;});};// Hàm tính tổng nguyên liệu đã sử dụng\nconst calculateUsedIngredients=()=>{const usedIngredients={};Object.keys(salesCount).forEach(itemId=>{const count=salesCount[itemId];if(count>0&&recipes[itemId]){Object.keys(recipes[itemId]).forEach(ingredientId=>{const amount=recipes[itemId][ingredientId]*count;usedIngredients[ingredientId]=(usedIngredients[ingredientId]||0)+amount;});}});return usedIngredients;};const usedIngredients=calculateUsedIngredients();// Show spinner while loading data\nif(isDataLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",style:{paddingTop:'2rem',paddingBottom:'2rem'},children:/*#__PURE__*/_jsx(Spinner,{text:\"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u kho h\\xE0ng...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:{paddingTop:'2rem',paddingBottom:'2rem'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card text-center fade-in\",style:{background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',color:'white',border:'none',marginBottom:'2rem'},children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl\",style:{marginBottom:'0.5rem',fontSize:'2.5rem',fontWeight:'bold'},children:\"\\uD83D\\uDCCA Ki\\u1EC3m K\\xEA Nguy\\xEAn Li\\u1EC7u\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg\",style:{opacity:0.9},children:\"Theo d\\xF5i s\\u1ED1 l\\u01B0\\u1EE3ng b\\xE1n h\\xE0ng v\\xE0 t\\xEDnh to\\xE1n nguy\\xEAn li\\u1EC7u \\u0111\\xE3 s\\u1EED d\\u1EE5ng\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card text-center fade-in\",style:{marginBottom:'2rem'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label text-lg\",children:\"\\uD83D\\uDCC5 Ch\\u1ECDn ng\\xE0y ki\\u1EC3m k\\xEA\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:currentDate,onChange:e=>setCurrentDate(e.target.value),className:\"form-control\",style:{maxWidth:'300px',margin:'0 auto'}})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card fade-in\",style:{marginBottom:'3rem'},children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-bold mb-3 text-center\",children:\"\\uD83C\\uDF79 Ki\\u1EC3m K\\xEA S\\u1ED1 L\\u01B0\\u1EE3ng B\\xE1n\"}),/*#__PURE__*/_jsx(\"div\",{style:{padding:'1rem'},children:/*#__PURE__*/_jsx(MultiSelectGrid,{items:menuItems.map(item=>_objectSpread(_objectSpread({},item),{},{unit:'ly'})),selectedItems:selectedItems,onSelectionChange:(itemId,data)=>{setSelectedItems(prev=>_objectSpread(_objectSpread({},prev),{},{[itemId]:data}));// Update sales count only if amount exists\nif(data&&data.amount){updateSalesCount(itemId,parseInt(data.amount)||1);}},onAmountChange:(itemId,amount)=>{setSelectedItems(prev=>_objectSpread(_objectSpread({},prev),{},{[itemId]:_objectSpread(_objectSpread({},prev[itemId]),{},{amount:amount})}));// Update sales count\nupdateSalesCount(itemId,parseInt(amount)||1);},onRemove:itemId=>{setSelectedItems(prev=>{const newSelected=_objectSpread({},prev);delete newSelected[itemId];return newSelected;});// Update sales count to 0\nupdateSalesCount(itemId,0);},searchTerm:searchTerm,onSearchChange:setSearchTerm,leftTitle:\"Danh S\\xE1ch M\\xF3n\",rightTitle:\"S\\u1ED1 L\\u01B0\\u1EE3ng \\u0110\\xE3 B\\xE1n\",placeholder:\"T\\xECm ki\\u1EBFm m\\xF3n...\",showAmountInput:true,showSearch:true})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card fade-in\",style:{marginBottom:'2rem'},children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-bold mb-3 text-center\",children:\"\\uD83D\\uDCE6 T\\u1ED5ng Nguy\\xEAn Li\\u1EC7u \\u0110\\xE3 S\\u1EED D\\u1EE5ng\"}),Object.keys(usedIngredients).length>0?/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-3\",style:{gap:'1rem'},children:Object.keys(usedIngredients).map(ingredientId=>{const ingredient=ingredients.find(ing=>ing.id==ingredientId);return/*#__PURE__*/_jsx(\"div\",{className:\"card\",style:{padding:'1rem',backgroundColor:'#f8f9fa',border:'2px solid #e9ecef'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-primary\",children:usedIngredients[ingredientId]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-muted\",children:(ingredient===null||ingredient===void 0?void 0:ingredient.unit)||''}),/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold\",style:{color:'#333'},children:(ingredient===null||ingredient===void 0?void 0:ingredient.name)||'Unknown'})]})},ingredientId);})}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",style:{padding:'2rem'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'3rem',marginBottom:'1rem'},children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted text-lg\",children:\"Ch\\u01B0a c\\xF3 m\\xF3n n\\xE0o \\u0111\\u01B0\\u1EE3c b\\xE1n h\\xF4m nay\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card fade-in\",style:{background:'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',color:'white',border:'none',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold mb-2\",children:\"\\uD83D\\uDCCA T\\u1ED5ng S\\u1ED1 L\\u01B0\\u1EE3ng\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xl font-bold\",style:{fontSize:'2rem'},children:[Object.keys(salesCount).reduce((total,itemId)=>{return total+(salesCount[itemId]||0);},0),\" ly\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm\",style:{opacity:0.9,marginTop:'0.5rem'},children:[\"Ng\\xE0y \",new Date(currentDate).toLocaleDateString('vi-VN')]})]})]});};export default InventoryPage;","map":{"version":3,"names":["React","useState","useEffect","dataService","Spinner","MultiSelectGrid","jsx","_jsx","jsxs","_jsxs","InventoryPage","menuItems","setMenuItems","ingredients","setIngredients","recipes","setRecipes","salesCount","setSalesCount","currentDate","setCurrentDate","Date","toISOString","split","isDataLoading","setIsDataLoading","searchTerm","setSearchTerm","selectedItems","setSelectedItems","loadData","isInitialized","init","getMenuItems","getIngredients","getAllRecipes","error","console","todaySales","getSalesByDate","newSelectedItems","Object","keys","forEach","itemId","item","find","id","amount","toString","unit","updateSalesCount","count","newCount","Math","max","prev","updated","_objectSpread","updateSales","calculateUsedIngredients","usedIngredients","ingredientId","className","style","paddingTop","paddingBottom","children","text","background","color","border","marginBottom","fontSize","fontWeight","opacity","type","value","onChange","e","target","maxWidth","margin","padding","items","map","onSelectionChange","data","parseInt","onAmountChange","onRemove","newSelected","onSearchChange","leftTitle","rightTitle","placeholder","showAmountInput","showSearch","length","gap","ingredient","ing","backgroundColor","name","textAlign","reduce","total","marginTop","toLocaleDateString"],"sources":["D:/Ingredients Tool/tool/src/components/InventoryPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport dataService from '../services/dataService';\r\nimport Spinner from './Spinner';\r\nimport MultiSelectGrid from './MultiSelectGrid';\r\n\r\nconst InventoryPage = () => {\r\n  // State để lưu dữ liệu\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [recipes, setRecipes] = useState({});\r\n  const [salesCount, setSalesCount] = useState({});\r\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]);\r\n  const [isDataLoading, setIsDataLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedItems, setSelectedItems] = useState({});\r\n\r\n  // Load dữ liệu khi component mount\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      setIsDataLoading(true);\r\n      try {\r\n        if (!dataService.isInitialized) {\r\n          await dataService.init();\r\n        }\r\n        setMenuItems(dataService.getMenuItems());\r\n        setIngredients(dataService.getIngredients());\r\n        setRecipes(dataService.getAllRecipes());\r\n      } catch (error) {\r\n        console.error('Error loading data in InventoryPage:', error);\r\n      } finally {\r\n        setIsDataLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  // Load dữ liệu bán hàng khi component mount\r\n  useEffect(() => {\r\n    const todaySales = dataService.getSalesByDate(currentDate);\r\n    setSalesCount(todaySales);\r\n  }, [currentDate]);\r\n\r\n  // Sync selectedItems với salesCount\r\n  useEffect(() => {\r\n    const newSelectedItems = {};\r\n    Object.keys(salesCount).forEach(itemId => {\r\n      if (salesCount[itemId] > 0) {\r\n        const item = menuItems.find(item => item.id == itemId);\r\n        if (item) {\r\n          newSelectedItems[itemId] = {\r\n            amount: salesCount[itemId].toString(),\r\n            unit: 'ly'\r\n          };\r\n        }\r\n      }\r\n    });\r\n    setSelectedItems(newSelectedItems);\r\n  }, [salesCount, menuItems]);\r\n\r\n  // Hàm cập nhật số lượng bán\r\n  const updateSalesCount = (itemId, count) => {\r\n    const newCount = Math.max(0, count); // Đảm bảo không âm\r\n    setSalesCount(prev => {\r\n      const updated = {\r\n        ...prev,\r\n        [itemId]: newCount\r\n      };\r\n      // Lưu vào localStorage\r\n      dataService.updateSales(currentDate, updated);\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  // Hàm tính tổng nguyên liệu đã sử dụng\r\n  const calculateUsedIngredients = () => {\r\n    const usedIngredients = {};\r\n    \r\n    Object.keys(salesCount).forEach(itemId => {\r\n      const count = salesCount[itemId];\r\n      if (count > 0 && recipes[itemId]) {\r\n        Object.keys(recipes[itemId]).forEach(ingredientId => {\r\n          const amount = recipes[itemId][ingredientId] * count;\r\n          usedIngredients[ingredientId] = (usedIngredients[ingredientId] || 0) + amount;\r\n        });\r\n      }\r\n    });\r\n    \r\n    return usedIngredients;\r\n  };\r\n\r\n  const usedIngredients = calculateUsedIngredients();\r\n\r\n  // Show spinner while loading data\r\n  if (isDataLoading) {\r\n    return (\r\n      <div className=\"container\" style={{ paddingTop: '2rem', paddingBottom: '2rem' }}>\r\n        <Spinner text=\"Đang tải dữ liệu kho hàng...\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={{ paddingTop: '2rem', paddingBottom: '2rem' }}>\r\n      {/* Header */}\r\n      <div className=\"card text-center fade-in\" style={{ \r\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n        color: 'white',\r\n        border: 'none',\r\n        marginBottom: '2rem'\r\n      }}>\r\n        <h1 className=\"text-xl\" style={{ \r\n          marginBottom: '0.5rem',\r\n          fontSize: '2.5rem',\r\n          fontWeight: 'bold'\r\n        }}>\r\n          📊 Kiểm Kê Nguyên Liệu\r\n        </h1>\r\n        <p className=\"text-lg\" style={{ opacity: 0.9 }}>\r\n          Theo dõi số lượng bán hàng và tính toán nguyên liệu đã sử dụng\r\n        </p>\r\n      </div>\r\n      \r\n      {/* Date Selector */}\r\n      <div className=\"card text-center fade-in\" style={{ marginBottom: '2rem' }}>\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label text-lg\">\r\n            📅 Chọn ngày kiểm kê\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            value={currentDate}\r\n            onChange={(e) => setCurrentDate(e.target.value)}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '300px', margin: '0 auto' }}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Menu Items - MultiSelectGrid */}\r\n      <div className=\"card fade-in\" style={{ marginBottom: '3rem' }}>\r\n        <h2 className=\"text-lg font-bold mb-3 text-center\">🍹 Kiểm Kê Số Lượng Bán</h2>\r\n        <div style={{ padding: '1rem' }}>\r\n          <MultiSelectGrid\r\n            items={menuItems.map(item => ({ ...item, unit: 'ly' }))}\r\n            selectedItems={selectedItems}\r\n            onSelectionChange={(itemId, data) => {\r\n              setSelectedItems(prev => ({\r\n                ...prev,\r\n                [itemId]: data\r\n              }));\r\n              // Update sales count only if amount exists\r\n              if (data && data.amount) {\r\n                updateSalesCount(itemId, parseInt(data.amount) || 1);\r\n              }\r\n            }}\r\n            onAmountChange={(itemId, amount) => {\r\n              setSelectedItems(prev => ({\r\n                ...prev,\r\n                [itemId]: {\r\n                  ...prev[itemId],\r\n                  amount: amount\r\n                }\r\n              }));\r\n              // Update sales count\r\n              updateSalesCount(itemId, parseInt(amount) || 1);\r\n            }}\r\n            onRemove={(itemId) => {\r\n              setSelectedItems(prev => {\r\n                const newSelected = { ...prev };\r\n                delete newSelected[itemId];\r\n                return newSelected;\r\n              });\r\n              // Update sales count to 0\r\n              updateSalesCount(itemId, 0);\r\n            }}\r\n            searchTerm={searchTerm}\r\n            onSearchChange={setSearchTerm}\r\n            leftTitle=\"Danh Sách Món\"\r\n            rightTitle=\"Số Lượng Đã Bán\"\r\n            placeholder=\"Tìm kiếm món...\"\r\n            showAmountInput={true}\r\n            showSearch={true}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tổng kết nguyên liệu đã sử dụng */}\r\n      <div className=\"card fade-in\" style={{ marginBottom: '2rem' }}>\r\n        <h2 className=\"text-lg font-bold mb-3 text-center\">📦 Tổng Nguyên Liệu Đã Sử Dụng</h2>\r\n        {Object.keys(usedIngredients).length > 0 ? (\r\n          <div className=\"grid grid-3\" style={{ gap: '1rem' }}>\r\n            {Object.keys(usedIngredients).map(ingredientId => {\r\n              const ingredient = ingredients.find(ing => ing.id == ingredientId);\r\n              return (\r\n                <div key={ingredientId} className=\"card\" style={{\r\n                  padding: '1rem',\r\n                  backgroundColor: '#f8f9fa',\r\n                  border: '2px solid #e9ecef'\r\n                }}>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-lg font-bold text-primary\">\r\n                      {usedIngredients[ingredientId]}\r\n                    </div>\r\n                    <div className=\"text-sm text-muted\">\r\n                      {ingredient?.unit || ''}\r\n                    </div>\r\n                    <div className=\"font-semibold\" style={{ color: '#333' }}>\r\n                      {ingredient?.name || 'Unknown'}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center\" style={{ padding: '2rem' }}>\r\n            <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>📊</div>\r\n            <p className=\"text-muted text-lg\">\r\n              Chưa có món nào được bán hôm nay\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Tổng doanh thu */}\r\n      <div className=\"card fade-in\" style={{ \r\n        background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',\r\n        color: 'white',\r\n        border: 'none',\r\n        textAlign: 'center'\r\n      }}>\r\n        <h3 className=\"text-lg font-bold mb-2\">📊 Tổng Số Lượng</h3>\r\n        <div className=\"text-xl font-bold\" style={{ fontSize: '2rem' }}>\r\n          {Object.keys(salesCount).reduce((total, itemId) => {\r\n            return total + (salesCount[itemId] || 0);\r\n          }, 0)} ly\r\n        </div>\r\n        <div className=\"text-sm\" style={{ opacity: 0.9, marginTop: '0.5rem' }}>\r\n          Ngày {new Date(currentDate).toLocaleDateString('vi-VN')}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}